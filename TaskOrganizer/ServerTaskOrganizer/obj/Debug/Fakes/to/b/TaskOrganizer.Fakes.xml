<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TaskOrganizer.Fakes</name>
    </assembly>
    <members>
        <member name="T:TaskOrganizer.Fakes.ShimConfigConnectDatabase">
            <summary>Тип оболочки совместимости для TaskOrganizer.ConfigConnectDatabase</summary>
        </member>
        <member name="M:TaskOrganizer.Fakes.ShimConfigConnectDatabase.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:TaskOrganizer.Fakes.ShimConfigConnectDatabase.#ctor(TaskOrganizer.ConfigConnectDatabase)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:TaskOrganizer.Fakes.ShimConfigConnectDatabase.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.AllInstances.nameDatabaseGet">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.get_nameDatabase()</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.AllInstances.nameDatabaseSetString">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.set_nameDatabase(String value)</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.AllInstances.nameServerGet">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.get_nameServer()</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.AllInstances.nameServerSetString">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.set_nameServer(String value)</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.AllInstances.nameTableDatabaseGet">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.get_nameTableDatabase()</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.AllInstances.nameTableDatabaseSetString">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.set_nameTableDatabase(String value)</summary>
        </member>
        <member name="M:TaskOrganizer.Fakes.ShimConfigConnectDatabase.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:TaskOrganizer.Fakes.ShimConfigConnectDatabase.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.Constructor">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.ConfigConnectDatabase()</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.ConstructorStringStringString">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.ConfigConnectDatabase(String nameServer, String nameDatabase, String nameTableDatabase)</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.nameDatabaseGet">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.get_nameDatabase()</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.nameDatabaseSetString">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.set_nameDatabase(String value)</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.nameServerGet">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.get_nameServer()</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.nameServerSetString">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.set_nameServer(String value)</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.nameTableDatabaseGet">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.get_nameTableDatabase()</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.ShimConfigConnectDatabase.nameTableDatabaseSetString">
            <summary>Задает оболочка совместимости ConfigConnectDatabase.set_nameTableDatabase(String value)</summary>
        </member>
        <member name="T:TaskOrganizer.Fakes.StubConfigConnectDatabase">
            <summary>Тип заглушки TaskOrganizer.ConfigConnectDatabase</summary>
        </member>
        <member name="M:TaskOrganizer.Fakes.StubConfigConnectDatabase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:TaskOrganizer.Fakes.StubConfigConnectDatabase.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.StubConfigConnectDatabase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:TaskOrganizer.Fakes.StubConfigConnectDatabase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConfigConnectDatabase</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.StubConfigConnectDatabase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:TaskOrganizer.Fakes.StubConfigConnectDatabase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:WCF_TaskOrganizer.Fakes.ShimTask">
            <summary>Тип оболочки совместимости для WCF_TaskOrganizer.Task</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimTask.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimTask.#ctor(WCF_TaskOrganizer.Task)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.DayGet">
            <summary>Задает оболочка совместимости Task.get_Day()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.DaySetInt32">
            <summary>Задает оболочка совместимости Task.set_Day(Int32 value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.DescriptionGet">
            <summary>Задает оболочка совместимости Task.get_Description()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.DescriptionSetString">
            <summary>Задает оболочка совместимости Task.set_Description(String value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.IdGet">
            <summary>Задает оболочка совместимости Task.get_Id()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости Task.set_Id(Int32 value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.MonthGet">
            <summary>Задает оболочка совместимости Task.get_Month()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.MonthSetInt32">
            <summary>Задает оболочка совместимости Task.set_Month(Int32 value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.PriorityGet">
            <summary>Задает оболочка совместимости Task.get_Priority()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.PrioritySetString">
            <summary>Задает оболочка совместимости Task.set_Priority(String value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.StatusGet">
            <summary>Задает оболочка совместимости Task.get_Status()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.StatusSetBoolean">
            <summary>Задает оболочка совместимости Task.set_Status(Boolean value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.YearGet">
            <summary>Задает оболочка совместимости Task.get_Year()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.AllInstances.YearSetInt32">
            <summary>Задает оболочка совместимости Task.set_Year(Int32 value)</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimTask.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimTask.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.Constructor">
            <summary>Задает оболочка совместимости Task.Task()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.ConstructorInt32StringStringBooleanInt32Int32Int32">
            <summary>Задает оболочка совместимости Task.Task(Int32 Id, String Description, String Priority, Boolean Status, Int32 Year, Int32 Month, Int32 Day)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.ConstructorStringStringBooleanInt32Int32Int32">
            <summary>Задает оболочка совместимости Task.Task(String Description, String Priority, Boolean Status, Int32 Year, Int32 Month, Int32 Day)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.DayGet">
            <summary>Задает оболочка совместимости Task.get_Day()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.DaySetInt32">
            <summary>Задает оболочка совместимости Task.set_Day(Int32 value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.DescriptionGet">
            <summary>Задает оболочка совместимости Task.get_Description()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.DescriptionSetString">
            <summary>Задает оболочка совместимости Task.set_Description(String value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.IdGet">
            <summary>Задает оболочка совместимости Task.get_Id()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.IdSetInt32">
            <summary>Задает оболочка совместимости Task.set_Id(Int32 value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.MonthGet">
            <summary>Задает оболочка совместимости Task.get_Month()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.MonthSetInt32">
            <summary>Задает оболочка совместимости Task.set_Month(Int32 value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.PriorityGet">
            <summary>Задает оболочка совместимости Task.get_Priority()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.PrioritySetString">
            <summary>Задает оболочка совместимости Task.set_Priority(String value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.StatusGet">
            <summary>Задает оболочка совместимости Task.get_Status()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.StatusSetBoolean">
            <summary>Задает оболочка совместимости Task.set_Status(Boolean value)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.YearGet">
            <summary>Задает оболочка совместимости Task.get_Year()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimTask.YearSetInt32">
            <summary>Задает оболочка совместимости Task.set_Year(Int32 value)</summary>
        </member>
        <member name="T:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer">
            <summary>Тип оболочки совместимости для WCF_TaskOrganizer.WCF_TaskOrganizer</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.#ctor(WCF_TaskOrganizer.WCF_TaskOrganizer)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="T:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.AllInstances.WCF_TaskOrganizerITaskOrganizerAddRowsToDbTask">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.AddRowsToDb(Task task)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.AllInstances.WCF_TaskOrganizerITaskOrganizerConnectToDb">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.ConnectToDb()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.AllInstances.WCF_TaskOrganizerITaskOrganizerDeleteRowInDbInt32">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.DeleteRowInDb(Int32 id)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.AllInstances.WCF_TaskOrganizerITaskOrganizerDisconnectFromDb">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.DisconnectFromDb()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.AllInstances.WCF_TaskOrganizerITaskOrganizerSaveChangesToDbListOfTask">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.SaveChangesToDb(List`1&lt;Task&gt; task)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.AllInstances.WCF_TaskOrganizerITaskOrganizerSelectAllFromDb">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.SelectAllFromDb()</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.Bind(WCF_TaskOrganizer.ITaskOrganizer)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.Constructor">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.WCF_TaskOrganizerITaskOrganizerAddRowsToDbTask">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.AddRowsToDb(Task task)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.WCF_TaskOrganizerITaskOrganizerConnectToDb">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.ConnectToDb()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.WCF_TaskOrganizerITaskOrganizerDeleteRowInDbInt32">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.DeleteRowInDb(Int32 id)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.WCF_TaskOrganizerITaskOrganizerDisconnectFromDb">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.DisconnectFromDb()</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.WCF_TaskOrganizerITaskOrganizerSaveChangesToDbListOfTask">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.SaveChangesToDb(List`1&lt;Task&gt; task)</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.ShimWCF_TaskOrganizer.WCF_TaskOrganizerITaskOrganizerSelectAllFromDb">
            <summary>Задает оболочка совместимости WCF_TaskOrganizer.WCF_TaskOrganizer.ITaskOrganizer.SelectAllFromDb()</summary>
        </member>
        <member name="T:WCF_TaskOrganizer.Fakes.StubITaskOrganizer">
            <summary>Тип заглушки WCF_TaskOrganizer.ITaskOrganizer</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.#ctor">
            <summary>Инициализирует новый экземпляр type StubITaskOrganizer</summary>
        </member>
        <member name="F:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.AddRowsToDbTask">
            <summary>Задает stub ITaskOrganizer.AddRowsToDb(Task task)</summary>
        </member>
        <member name="F:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.ConnectToDb">
            <summary>Задает stub ITaskOrganizer.ConnectToDb()</summary>
        </member>
        <member name="F:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.DeleteRowInDbInt32">
            <summary>Задает stub ITaskOrganizer.DeleteRowInDb(Int32 Id)</summary>
        </member>
        <member name="F:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.DisconnectFromDb">
            <summary>Задает stub ITaskOrganizer.DisconnectFromDb()</summary>
        </member>
        <member name="F:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.SaveChangesToDbListOfTask">
            <summary>Задает stub ITaskOrganizer.SaveChangesToDb(List`1&lt;Task&gt; task)</summary>
        </member>
        <member name="F:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.SelectAllFromDb">
            <summary>Задает stub ITaskOrganizer.SelectAllFromDb()</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.WCF_TaskOrganizer#ITaskOrganizer#AddRowsToDb(WCF_TaskOrganizer.Task)">
            <summary>Задает заглушка ITaskOrganizer.AddRowsToDb(Task task)</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.WCF_TaskOrganizer#ITaskOrganizer#ConnectToDb">
            <summary>Задает заглушка ITaskOrganizer.ConnectToDb()</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.WCF_TaskOrganizer#ITaskOrganizer#DeleteRowInDb(System.Int32)">
            <summary>Задает заглушка ITaskOrganizer.DeleteRowInDb(Int32 Id)</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.WCF_TaskOrganizer#ITaskOrganizer#DisconnectFromDb">
            <summary>Задает заглушка ITaskOrganizer.DisconnectFromDb()</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.WCF_TaskOrganizer#ITaskOrganizer#SaveChangesToDb(System.Collections.Generic.List{WCF_TaskOrganizer.Task})">
            <summary>Задает заглушка ITaskOrganizer.SaveChangesToDb(List`1&lt;Task&gt; task)</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubITaskOrganizer.WCF_TaskOrganizer#ITaskOrganizer#SelectAllFromDb">
            <summary>Задает заглушка ITaskOrganizer.SelectAllFromDb()</summary>
        </member>
        <member name="T:WCF_TaskOrganizer.Fakes.StubTask">
            <summary>Тип заглушки WCF_TaskOrganizer.Task</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubTask.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubTask.#ctor(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubTask.#ctor(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.StubTask.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubTask.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTask</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.StubTask.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.StubTask.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:WCF_TaskOrganizer.Fakes.StubWCF_TaskOrganizer">
            <summary>Тип заглушки WCF_TaskOrganizer.WCF_TaskOrganizer</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubWCF_TaskOrganizer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.StubWCF_TaskOrganizer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="M:WCF_TaskOrganizer.Fakes.StubWCF_TaskOrganizer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWCF_TaskOrganizer</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.StubWCF_TaskOrganizer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:WCF_TaskOrganizer.Fakes.StubWCF_TaskOrganizer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
    </members>
</doc>
